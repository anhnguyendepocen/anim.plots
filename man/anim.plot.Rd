% Generated by roxygen2 (4.0.2): do not edit by hand
\name{anim.plot}
\alias{anim.plot}
\title{Create an animated plot.}
\usage{
anim.plot(...)
}
\arguments{
\item{...}{Other arguments passed to \code{plot}.}

\item{x,y}{vectors of x and y coordinates. These can be passed in any way
accepted by \code{\link{xy.coords}}.}

\item{times}{a vector of times. If NULL and \code{x} is a matrix, a sequence
from 1 to the last dimension of \code{x} will be used.}

\item{show}{if false, do not show plot; just return calls.}

\item{speed}{animation speed.}

\item{window}{what window of times to show in each animation. The default,
\code{t}, shows just plots from time t. To draw a plot incrementally,
use \code{window=1:t}.}

\item{use.times}{if \code{TRUE}, animation speed is determined by the
\code{times} argument. If \code{FALSE}, animation speed is constant.}

\item{xlim,ylim,col,pch,labels,cex,lty,lwd,asp}{arguments passed to
\code{\link{plot}}.}
}
\description{
\code{anim.plot}
}
\details{
Each unique level of \code{times} will generate a single frame of animation.
The frames will be ordered by \code{times}.

In general:

\itemize{
\item Parameters that apply to each point of the plot, such as
\code{xlim, ylim, col, pch, labels} and \code{cex}, can be passed as vectors
which will be recycled to \code{length(times)}.
\item Parameters that apply
to the plot as a whole, and can have length > 1, such as \code{xlim} and \code{ylim}, can be passed as vectors or matrices. If vectors, the
same vector will be passed to every frame. If matrices, column \code{i} will
be passed to the \code{i}'th frame.
\item Parameters that apply to the plot
as a whole, and always have length 1, such as \code{xlab} and \code{main},
can be passed as vectors and will be
recycled to the number of frames.
}
}
\examples{
x <- rep(1:100/10, 10)
times <- rep(1:10, each=100)
y <- sin(x*times/4)
anim.plot(x,y,times, type="l")
anim.plot(x,y,times, type="l", fg="red", col="blue")
## changing colours - a per-point parameter
cols <- (x+9*times)/100 # length 1000
anim.plot(x,y,times, ylab="Sine wave", type="l", col=rgb(cols, 0, 1-cols), lwd=2)
anim.plot(x,y,times, ylab="Sine wave", type="p", col=rainbow(100)[x *10])

## changing line width - a whole-plot parameter
anim.plot(x, y, times, lwd=matrix(1:10, ncol=10), type="l")

## incremental plot using window
anim.plot(1:10, 1:10, times=1:10, window=1:t)

## moving window
anim.plot(1:10, 1:10, times=1:10, window=(t-2):t)

## discoveries 1860-1959: moving window
xlim <- rbind(1860:1959,1870:1969)
anim.plot(1860:1959, discoveries, times=1:100, xlim=xlim,
     xaxp=rbind(xlim, 10), window=t:(t+10), type="h", lwd=8, speed=5)

## Formula interface
ChickWeight$chn <- as.numeric(as.factor(ChickWeight$Chick))
anim.plot(weight ~ chn + Time, data=ChickWeight, col=as.numeric(Diet),
     pch=as.numeric(Diet), speed=3)
}

