% Generated by roxygen2 (4.0.2): do not edit by hand
\name{anim.plot}
\alias{anim.plot}
\title{Create an animated plot.}
\usage{
anim.plot(...)
}
\arguments{
\item{...}{Other arguments passed to \code{plot}.}

\item{x}{a matrix or vector. If a matrix, each column is plotted in a single
frame of the animation. If a vector, the same values are plotted in each
frame. Either \code{x} or \code{y} must be a matrix.}

\item{y}{a matrix or vector.}

\item{interval}{how many seconds to wait between each frame.}

\item{xlim}{These and subsequent arguments are the same as in
\code{\link{plot}}.}

\item{ylim}{}

\item{col}{}

\item{pch}{}

\item{labels}{}

\item{cex}{}

\item{lty}{}

\item{lwd}{}

\item{asp}{}

\item{smooth}{Interpolate data by linear smoothing? If NULL, no smoothing is
done. If e.g. \code{smooth=2}, the number of plots will be doubled.}
}
\description{
\code{anim.plot}
}
\details{
Parameters \code{xlim, ylim, col, pch, labels} and \code{cex} can be
matrices. Each column will apply to a single frame of the animation.

Parameters \code{asp, lwd} and \code{lty} can be vectors of length > 1, in
which case each value will apply to a single frame.

When \code{smooth > 1}, parameters are interpolated where appropriate
(including colours).
}
\examples{
x <- rep(1:100/10, 10)
times <- rep(1:10, each=100)
y <- sin(x*times/4)
anim.plot(x,y,times, ylab="Sine wave", type="l")
anim.plot(x,y,times, ylab="Sine wave", type="l", fg="red", col="blue")
## changing colours - a per-point parameter
cols <- (x+9*times)/100 # length 1000
anim.plot(x,y,times, ylab="Sine wave", type="l", col=rgb(cols, 0, 1-cols), lwd=2)
anim.plot(x,y,times, ylab="Sine wave", type="p", col=rainbow(100)[x *10])

## changing line width - a whole-plot parameter
anim.plot(x, y, lwd=matrix(1:10, ncol=10), type="l")

## discoveries 1860-1959
dis <- as.vector(sapply(1:91, function(x) discoveries[x:(x+9)]))
years <- outer(0:9, 1860:1951,"+")
anim.plot(years, dis, times=rep(1:100, each=10), xlab="Year", ylab="Discoveries", type="h",
     col="blue", xlim=years[c(1,10),])
}

